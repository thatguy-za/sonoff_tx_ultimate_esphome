esphome:
  name: bedside-lights #Update me
  friendly_name: bedside-lights #Update me

  includes:
    - touch_panel.hpp
    - touch_panel.cpp

esp32:
  board: esp32dev

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: your_key_here

ota:
  password: your_password_here

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

captive_portal:    

uart:
  id: uart_bus
  tx_pin: 19
  rx_pin: 22
  baud_rate: 115200

binary_sensor:
  - platform: custom
    lambda: |- 
        auto touch_panel = new touch_panel::TouchPanel(id(uart_bus));
        App.register_component(touch_panel);
        return {
          touch_panel->left,
          touch_panel->right,
          touch_panel->middle,
          touch_panel->two_finger,
          touch_panel->dragged_ltr,
          touch_panel->dragged_rtl,
        };
    binary_sensors:
      - id: button_left
        name: "Left Button"
        on_press:
          - switch.toggle: relay1      
          - switch.turn_on: haptics
      - id: button_right
        name: "Right Button"
        on_press:
          - switch.toggle: relay2
          - switch.turn_on: haptics



# Switch Relays
switch:
  - platform: gpio
    name: "Left Bedside light"
    pin: GPIO18
    id: relay1
    restore_mode: ALWAYS_OFF    
    on_turn_on:
        then:
            light.turn_on: status_light_left
    on_turn_off:
        then:
            light.turn_off: status_light_left

  - platform: gpio
    name: "Right Bedside light"
    pin: GPIO17
    restore_mode: ALWAYS_OFF    
    id: relay2
    on_turn_on:
        then:
            light.turn_on: status_light_right
    on_turn_off:
        then:
            light.turn_off: status_light_right
  - platform: gpio
    name: "touch panel power"
    pin:
      number: GPIO5
      inverted: true
    id: ca51_pow
    restore_mode: RESTORE_DEFAULT_ON
  - platform: gpio
    pin: GPIO21
    name: "Haptics"
    id: "haptics"
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - delay: 60ms
      - switch.turn_off: haptics

# Light
light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812
    pin: GPIO13
    num_leds: 1
    name: "NeoPixel 13"
    internal: true
  - platform: neopixelbus
    type: GRB
    variant: WS2812
    pin: GPIO13
    num_leds: 28
    name: "Nightlight"
    id: rgb_light
    effects:
      - addressable_rainbow:
          name: 'rainbow fast'
          speed: 50
      - addressable_twinkle:

  - platform: partition
    id: status_light_right
    name: "Status LED - right"
    segments:
      - id: rgb_light
        from: 6 #0
        to: 6
    on_turn_on:
        then:
            light.turn_on:
              id: status_light_right
              brightness: 90%
              red: 100%
              green: 80%
              blue: 50%
              
  - platform: partition
    id: status_light_left
    name: "Status LED - left"
    segments:
      - id: rgb_light
        from: 12 #12
        to: 12
    on_turn_on:
        then:
            light.turn_on:
              id: status_light_left
              brightness: 90%
              red: 100%
              green: 80%
              blue: 50%
